{
  "openapi": "3.0.0",
  "info": {
    "title": "Barefoot Nomad",
    "description": "Documentation for Script Heroes' project(Barefoot Nomad)",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/api/signup": {
      "get": {
        "description": "Obtain information about users from database",
        "parameters": [
          {
            "name": "bodyLimit",
            "in": "query",
            "description": "The amount of users returned",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 50,
              "minimum": 10,
              "type": "integer",
              "example": 35
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful  pull of users info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new user in database",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created new user"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Obtain info a specific user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of a user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 34
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "description": "Login to barefoot nomad",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "email@test.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string",
                      "example": "jwttoken"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "description": "Logout to barefoot nomad",
        "parameters": [
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "a token for authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": "Logout success"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Users": {
        "type": "array",
        "description": "Array of users info",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      },
      "User": {
        "properties": {
          "id": {
            "type": "integer",
            "example": 4
          },
          "user name": {
            "type": "string",
            "example": "user name"
          },
          "user email": {
            "type": "string",
            "example": "email@test.com"
          }
        },
        "description": "Model containing user info"
      },
      "Profile": {
        "properties": {
          "id": {
            "type": "integer",
            "example": 4
          },
          "first name": {
            "type": "string",
            "example": "JOHN"
          },
          "last name": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "example": "email@test.com"
          },
          "gender": {
            "type": "string",
            "example": "Male"
          },
          "birthdate": {
            "type": "date",
            "example": "1856-02-09"
          },
          "language": {
            "type": "string",
            "example": "Kinyarwanda"
          },
          "currency": {
            "type": "string",
            "example": "US$"
          },
          "country": {
            "type": "string",
            "example": "Rwanda"
          },
          "role": {
            "type": "string",
            "example": "Software Developer"
          },
          "department": {
            "type": "string",
            "example": "IT"
          },
          "linemanager": {
            "type": "string",
            "example": "JANE Doe"
          }
        },
        "description": "Model containing user profile info"
      },
      "Updated Profile": {
        "properties": {
          "id": {
            "type": "integer",
            "example": 4
          },
          "first name": {
            "type": "string",
            "example": "JOHN"
          },
          "last name": {
            "type": "string",
            "example": "Doe"
          },
          "gender": {
            "type": "string",
            "example": "Male"
          },
          "birthdate": {
            "type": "date",
            "example": "1856-02-09"
          },
          "language": {
            "type": "string",
            "example": "English"
          },
          "currency": {
            "type": "string",
            "example": "US$"
          },
          "country": {
            "type": "string",
            "example": "Rwanda"
          },
          "role": {
            "type": "string",
            "example": "Software Developer"
          },
          "department": {
            "type": "string",
            "example": "IT"
          },
          "linemanager": {
            "type": "string",
            "example": "JANE Doe"
          }
        },
        "description": "Model containing user profile info"
      }
    }
  },
  "/api/profile": {
    "get": {
      "description": "Obtain profile information of users from the database",
      "parameters": [
        {
          "in": "header",
          "name": "x-auth-token",
          "description": "a token for authentication",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "responses": {
          "200": {
            "description": "Successful  pull of user updated info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Updated Profile"
                }
              }
            }
          },
          "404": {
            "description": "User with provided email not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Access denied"
          }
        }
      }
    }
  },
  "/api/profile/update": {
    "put": {
      "description": "Update profile information of logged in user",
      "parameters": [
        {
          "in": "header",
          "name": "x-auth-token",
          "description": "a token for authentication",
          "required": true,
          "type": "string"
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "first name": {
                  "type": "string",
                  "example": "JOHN"
                },
                "last name": {
                  "type": "string",
                  "example": "Doe"
                },
                "gender": {
                  "type": "string",
                  "example": "Male"
                },
                "birthdate": {
                  "type": "date",
                  "example": "1856-02-09"
                },
                "language": {
                  "type": "string",
                  "example": "English"
                },
                "currency": {
                  "type": "string",
                  "example": "US$"
                },
                "country": {
                  "type": "string",
                  "example": "Rwanda"
                },
                "role": {
                  "type": "string",
                  "example": "Software Developer"
                },
                "department": {
                  "type": "string",
                  "example": "IT"
                },
                "linemanager": {
                  "type": "string",
                  "example": "JANE Doe"
                }
              }
            }
          }
        },
        "required": true
      },
      "responses": {
        "201": {
          "description": "Successfuly updated user profile info",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Updated Profile"
              }
            }
          }
        },
        "404": {
          "description": "User with profided email not found"
        },
        "400": {
          "description": "Bad request"
        },
        "500": {
          "description": "Server error"
        },
        "401": {
          "description": "Access denied"
        }
      }
    }
  },
  "/api/profile/complete": {
    "put": {
      "description": "complete profile information of logged in user after succesful registration",
      "parameters": [
        {
          "in": "header",
          "name": "x-auth-token",
          "description": "a token for authentication",
          "required": true,
          "type": "string"
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "gender": {
                  "type": "string",
                  "example": "Male"
                },
                "birthdate": {
                  "type": "date",
                  "example": "1856-02-09"
                },
                "language": {
                  "type": "string",
                  "example": "Kinyarwanda"
                },
                "currency": {
                  "type": "string",
                  "example": "US$"
                },
                "country": {
                  "type": "string",
                  "example": "Rwanda"
                },
                "role": {
                  "type": "string",
                  "example": "Software Developer"
                },
                "department": {
                  "type": "string",
                  "example": "IT"
                },
                "linemanager": {
                  "type": "string",
                  "example": "JANE Doe"
                }
              }
            }
          }
        },
        "required": true
      },
      "responses": {
        "201": {
          "description": "Successfuly completed user profile info",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            }
          }
        },
        "400": {
          "description": "Bad request"
        },
        "401": {
          "description": "Access denied"
        }
      }
    }
  }
}
